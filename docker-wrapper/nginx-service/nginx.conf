# Hardened NGINX configuration for azfetchbro reverse proxy
# This file and the TLS materials (server.crt, server.key, dhparam.pem)
# should be placed in the project directory: ./conf/

user  nginx;
worker_processes  auto;
pid /var/run/nginx.pid;

events {
    worker_connections  4096;
    # multi_accept on;  # optional
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logs to Docker stdout/stderr
    access_log /dev/stdout;
    error_log  /dev/stderr warn;

    # General hardening
    server_tokens off;
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 4096;
    client_max_body_size 10m;  # adjust if you need larger payloads
    server_names_hash_bucket_size 128;

    # Compression (disable for security-sensitive APIs if desired)
    gzip on;
    gzip_types text/plain text/css application/json application/javascript application/xml+rss application/xml text/javascript;

    # Strict TLS settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    # Modern cipher suite (broadly compatible with TLSv1.2/1.3)
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_ecdh_curve X25519:secp384r1:secp256r1;
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    # OCSP stapling disabled by default to avoid resolver/chain issues
    ssl_stapling off;

    # Security headers
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Upstream to the app container
    upstream azfetchbro_upstream {
        server azfetchbro:8080;
        keepalive 64;
    }

    # Main HTTPS server
    server {
        listen 8443 ssl reuseport;
        listen [::]:8443 ssl reuseport;
        http2 on;
        server_name _;

        # TLS cert materials provided by the user in ./conf
        ssl_certificate     /etc/nginx/external/server.crt.pem;
        ssl_certificate_key /etc/nginx/external/server.key.pem;
        ssl_dhparam         /etc/nginx/external/dhparam.pem;

        # Additional security headers
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy no-referrer always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none'; base-uri 'none'" always;

        # Proxy to the application
        location / {
            proxy_http_version 1.1;
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection        $connection_upgrade;
            proxy_set_header Upgrade           $http_upgrade;

            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
            proxy_connect_timeout 5s;

            proxy_pass http://azfetchbro_upstream;
        }

        # Optionally expose health endpoint directly
        location = /healthz {
            proxy_pass http://azfetchbro_upstream/healthz;
            access_log off;
        }

        # Nginx self health endpoint (no upstream dependency)
        location = /nginx-health {
            return 200;
            access_log off;
        }

        # Deny access to hidden files just in case
        location ~* \/\.+ {
            deny all;
        }
    }
}
